{"ast":null,"code":"import _objectSpread from \"C:/Users/Admin/Documents/GitHub/resume-portfolio/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/Admin/Documents/GitHub/resume-portfolio/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"bsPrefix\", \"split\", \"className\", \"childBsPrefix\", \"as\"];\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport DropdownContext from '@restart/ui/DropdownContext';\nimport { useDropdownToggle } from '@restart/ui/DropdownToggle';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport Button from './Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownToggle = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      bsPrefix,\n      split,\n      className,\n      childBsPrefix,\n      // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n      as: Component = Button\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n  const dropdownContext = useContext(DropdownContext);\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n  const [toggleProps] = useDropdownToggle();\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle'));\n\n  // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n  return /*#__PURE__*/_jsx(Component, _objectSpread(_objectSpread({\n    className: classNames(className, prefix, split && \"\".concat(prefix, \"-split\"), (dropdownContext == null ? void 0 : dropdownContext.show) && 'show')\n  }, toggleProps), props));\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;","map":{"version":3,"names":["useMergedRefs","DropdownContext","useDropdownToggle","classNames","React","useContext","Button","useBootstrapPrefix","useWrappedRefWithWarning","jsx","_jsx","DropdownToggle","forwardRef","_ref","ref","bsPrefix","split","className","childBsPrefix","as","Component","props","_objectWithoutProperties","_excluded","prefix","dropdownContext","undefined","toggleProps","_objectSpread","concat","show","displayName"],"sources":["C:/Users/Admin/Documents/GitHub/resume-portfolio/node_modules/react-bootstrap/esm/DropdownToggle.js"],"sourcesContent":["import useMergedRefs from '@restart/hooks/useMergedRefs';\nimport DropdownContext from '@restart/ui/DropdownContext';\nimport { useDropdownToggle } from '@restart/ui/DropdownToggle';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport Button from './Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownToggle = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  split,\n  className,\n  childBsPrefix,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = Button,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n  const dropdownContext = useContext(DropdownContext);\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n  const [toggleProps] = useDropdownToggle();\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle'));\n\n  // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n  return /*#__PURE__*/_jsx(Component, {\n    className: classNames(className, prefix, split && `${prefix}-split`, (dropdownContext == null ? void 0 : dropdownContext.show) && 'show'),\n    ...toggleProps,\n    ...props\n  });\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;"],"mappings":";;;AAAA,OAAOA,aAAa,MAAM,8BAA8B;AACxD,OAAOC,eAAe,MAAM,6BAA6B;AACzD,SAASC,iBAAiB,QAAQ,4BAA4B;AAC9D,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,QAAQ,OAAO;AAClC,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,kBAAkB,QAAQ,iBAAiB;AACpD,OAAOC,wBAAwB,MAAM,4BAA4B;AACjE,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,MAAMC,cAAc,GAAG,aAAaP,KAAK,CAACQ,UAAU,CAAC,CAAAC,IAAA,EAQlDC,GAAG,KAAK;EAAA,IAR2C;MACpDC,QAAQ;MACRC,KAAK;MACLC,SAAS;MACTC,aAAa;MACb;MACAC,EAAE,EAAEC,SAAS,GAAGd;IAElB,CAAC,GAAAO,IAAA;IADIQ,KAAK,GAAAC,wBAAA,CAAAT,IAAA,EAAAU,SAAA;EAER,MAAMC,MAAM,GAAGjB,kBAAkB,CAACQ,QAAQ,EAAE,iBAAiB,CAAC;EAC9D,MAAMU,eAAe,GAAGpB,UAAU,CAACJ,eAAe,CAAC;EACnD,IAAIiB,aAAa,KAAKQ,SAAS,EAAE;IAC/BL,KAAK,CAACN,QAAQ,GAAGG,aAAa;EAChC;EACA,MAAM,CAACS,WAAW,CAAC,GAAGzB,iBAAiB,CAAC,CAAC;EACzCyB,WAAW,CAACb,GAAG,GAAGd,aAAa,CAAC2B,WAAW,CAACb,GAAG,EAAEN,wBAAwB,CAACM,GAAG,EAAE,gBAAgB,CAAC,CAAC;;EAEjG;EACA;EACA,OAAO,aAAaJ,IAAI,CAACU,SAAS,EAAAQ,aAAA,CAAAA,aAAA;IAChCX,SAAS,EAAEd,UAAU,CAACc,SAAS,EAAEO,MAAM,EAAER,KAAK,OAAAa,MAAA,CAAOL,MAAM,WAAQ,EAAE,CAACC,eAAe,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,eAAe,CAACK,IAAI,KAAK,MAAM;EAAC,GACtIH,WAAW,GACXN,KAAK,CACT,CAAC;AACJ,CAAC,CAAC;AACFV,cAAc,CAACoB,WAAW,GAAG,gBAAgB;AAC7C,eAAepB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}