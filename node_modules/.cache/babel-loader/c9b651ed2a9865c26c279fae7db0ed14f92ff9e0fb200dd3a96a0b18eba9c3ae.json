{"ast":null,"code":"import _objectSpread from \"C:/Users/Admin/Documents/GitHub/resume-portfolio/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/Admin/Documents/GitHub/resume-portfolio/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"bsPrefix\", \"expand\", \"variant\", \"bg\", \"fixed\", \"sticky\", \"className\", \"as\", \"expanded\", \"onToggle\", \"onSelect\", \"collapseOnSelect\"];\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback, useMemo } from 'react';\nimport SelectableContext from '@restart/ui/SelectableContext';\nimport { useUncontrolled } from 'uncontrollable';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport NavbarBrand from './NavbarBrand';\nimport NavbarCollapse from './NavbarCollapse';\nimport NavbarToggle from './NavbarToggle';\nimport NavbarOffcanvas from './NavbarOffcanvas';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarText = createWithBsPrefix('navbar-text', {\n  Component: 'span'\n});\nconst Navbar = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const _useUncontrolled = useUncontrolled(props, {\n      expanded: 'onToggle'\n    }),\n    {\n      bsPrefix: initialBsPrefix,\n      expand = true,\n      variant = 'light',\n      bg,\n      fixed,\n      sticky,\n      className,\n      // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n      as: Component = 'nav',\n      expanded,\n      onToggle,\n      onSelect,\n      collapseOnSelect = false\n    } = _useUncontrolled,\n    controlledProps = _objectWithoutProperties(_useUncontrolled, _excluded);\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'navbar');\n  const handleCollapse = useCallback(function () {\n    onSelect == null ? void 0 : onSelect(...arguments);\n    if (collapseOnSelect && expanded) {\n      onToggle == null ? void 0 : onToggle(false);\n    }\n  }, [onSelect, collapseOnSelect, expanded, onToggle]);\n\n  // will result in some false positives but that seems better\n  // than false negatives. strict `undefined` check allows explicit\n  // \"nulling\" of the role if the user really doesn't want one\n  if (controlledProps.role === undefined && Component !== 'nav') {\n    controlledProps.role = 'navigation';\n  }\n  let expandClass = \"\".concat(bsPrefix, \"-expand\");\n  if (typeof expand === 'string') expandClass = \"\".concat(expandClass, \"-\").concat(expand);\n  const navbarContext = useMemo(() => ({\n    onToggle: () => onToggle == null ? void 0 : onToggle(!expanded),\n    bsPrefix,\n    expanded: !!expanded,\n    expand\n  }), [bsPrefix, expanded, expand, onToggle]);\n  return /*#__PURE__*/_jsx(NavbarContext.Provider, {\n    value: navbarContext,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: handleCollapse,\n      children: /*#__PURE__*/_jsx(Component, _objectSpread(_objectSpread({\n        ref: ref\n      }, controlledProps), {}, {\n        className: classNames(className, bsPrefix, expand && expandClass, variant && \"\".concat(bsPrefix, \"-\").concat(variant), bg && \"bg-\".concat(bg), sticky && \"sticky-\".concat(sticky), fixed && \"fixed-\".concat(fixed))\n      }))\n    })\n  });\n});\nNavbar.displayName = 'Navbar';\nexport default Object.assign(Navbar, {\n  Brand: NavbarBrand,\n  Collapse: NavbarCollapse,\n  Offcanvas: NavbarOffcanvas,\n  Text: NavbarText,\n  Toggle: NavbarToggle\n});","map":{"version":3,"names":["classNames","React","useCallback","useMemo","SelectableContext","useUncontrolled","createWithBsPrefix","NavbarBrand","NavbarCollapse","NavbarToggle","NavbarOffcanvas","useBootstrapPrefix","NavbarContext","jsx","_jsx","NavbarText","Component","Navbar","forwardRef","props","ref","_useUncontrolled","expanded","bsPrefix","initialBsPrefix","expand","variant","bg","fixed","sticky","className","as","onToggle","onSelect","collapseOnSelect","controlledProps","_objectWithoutProperties","_excluded","handleCollapse","arguments","role","undefined","expandClass","concat","navbarContext","Provider","value","children","_objectSpread","displayName","Object","assign","Brand","Collapse","Offcanvas","Text","Toggle"],"sources":["C:/Users/Admin/Documents/GitHub/resume-portfolio/node_modules/react-bootstrap/esm/Navbar.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback, useMemo } from 'react';\nimport SelectableContext from '@restart/ui/SelectableContext';\nimport { useUncontrolled } from 'uncontrollable';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport NavbarBrand from './NavbarBrand';\nimport NavbarCollapse from './NavbarCollapse';\nimport NavbarToggle from './NavbarToggle';\nimport NavbarOffcanvas from './NavbarOffcanvas';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarText = createWithBsPrefix('navbar-text', {\n  Component: 'span'\n});\nconst Navbar = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    bsPrefix: initialBsPrefix,\n    expand = true,\n    variant = 'light',\n    bg,\n    fixed,\n    sticky,\n    className,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'nav',\n    expanded,\n    onToggle,\n    onSelect,\n    collapseOnSelect = false,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    expanded: 'onToggle'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'navbar');\n  const handleCollapse = useCallback((...args) => {\n    onSelect == null ? void 0 : onSelect(...args);\n    if (collapseOnSelect && expanded) {\n      onToggle == null ? void 0 : onToggle(false);\n    }\n  }, [onSelect, collapseOnSelect, expanded, onToggle]);\n\n  // will result in some false positives but that seems better\n  // than false negatives. strict `undefined` check allows explicit\n  // \"nulling\" of the role if the user really doesn't want one\n  if (controlledProps.role === undefined && Component !== 'nav') {\n    controlledProps.role = 'navigation';\n  }\n  let expandClass = `${bsPrefix}-expand`;\n  if (typeof expand === 'string') expandClass = `${expandClass}-${expand}`;\n  const navbarContext = useMemo(() => ({\n    onToggle: () => onToggle == null ? void 0 : onToggle(!expanded),\n    bsPrefix,\n    expanded: !!expanded,\n    expand\n  }), [bsPrefix, expanded, expand, onToggle]);\n  return /*#__PURE__*/_jsx(NavbarContext.Provider, {\n    value: navbarContext,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: handleCollapse,\n      children: /*#__PURE__*/_jsx(Component, {\n        ref: ref,\n        ...controlledProps,\n        className: classNames(className, bsPrefix, expand && expandClass, variant && `${bsPrefix}-${variant}`, bg && `bg-${bg}`, sticky && `sticky-${sticky}`, fixed && `fixed-${fixed}`)\n      })\n    })\n  });\n});\nNavbar.displayName = 'Navbar';\nexport default Object.assign(Navbar, {\n  Brand: NavbarBrand,\n  Collapse: NavbarCollapse,\n  Offcanvas: NavbarOffcanvas,\n  Text: NavbarText,\n  Toggle: NavbarToggle\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}