{"ast":null,"code":"import _objectSpread from \"C:/Users/Admin/Documents/GitHub/resume-portfolio/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/Admin/Documents/GitHub/resume-portfolio/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"className\", \"bsPrefix\", \"as\"];\nimport classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix) {\n  let {\n    displayName = pascalCase(prefix),\n    Component,\n    defaultProps\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const BsComponent = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n    let {\n        className,\n        bsPrefix,\n        as: Tag = Component || 'div'\n      } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n    const componentProps = _objectSpread(_objectSpread({}, defaultProps), props);\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, _objectSpread({\n      ref: ref,\n      className: classNames(className, resolvedPrefix)\n    }, componentProps));\n  });\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","map":{"version":3,"names":["classNames","camelize","React","useBootstrapPrefix","jsx","_jsx","pascalCase","str","toUpperCase","slice","createWithBsPrefix","prefix","displayName","Component","defaultProps","arguments","length","undefined","BsComponent","forwardRef","_ref","ref","className","bsPrefix","as","Tag","props","_objectWithoutProperties","_excluded","componentProps","_objectSpread","resolvedPrefix"],"sources":["C:/Users/Admin/Documents/GitHub/resume-portfolio/node_modules/react-bootstrap/esm/createWithBsPrefix.js"],"sourcesContent":["import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const componentProps = {\n      ...defaultProps,\n      ...props\n    };\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...componentProps\n    });\n  });\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}"],"mappings":";;;AAAA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,kBAAkB,QAAQ,iBAAiB;AACpD,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,MAAMC,UAAU,GAAGC,GAAG,IAAIA,GAAG,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGP,QAAQ,CAACM,GAAG,CAAC,CAACE,KAAK,CAAC,CAAC,CAAC;AACvE;AACA,eAAe,SAASC,kBAAkBA,CAACC,MAAM,EAIzC;EAAA,IAJ2C;IACjDC,WAAW,GAAGN,UAAU,CAACK,MAAM,CAAC;IAChCE,SAAS;IACTC;EACF,CAAC,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EACJ,MAAMG,WAAW,GAAG,aAAahB,KAAK,CAACiB,UAAU,CAAC,CAAAC,IAAA,EAK/CC,GAAG,KAAK;IAAA,IALwC;QACjDC,SAAS;QACTC,QAAQ;QACRC,EAAE,EAAEC,GAAG,GAAGZ,SAAS,IAAI;MAEzB,CAAC,GAAAO,IAAA;MADIM,KAAK,GAAAC,wBAAA,CAAAP,IAAA,EAAAQ,SAAA;IAER,MAAMC,cAAc,GAAAC,aAAA,CAAAA,aAAA,KACfhB,YAAY,GACZY,KAAK,CACT;IACD,MAAMK,cAAc,GAAG5B,kBAAkB,CAACoB,QAAQ,EAAEZ,MAAM,CAAC;IAC3D,OAAO,aAAaN,IAAI,CAACoB,GAAG,EAAAK,aAAA;MAC1BT,GAAG,EAAEA,GAAG;MACRC,SAAS,EAAEtB,UAAU,CAACsB,SAAS,EAAES,cAAc;IAAC,GAC7CF,cAAc,CAClB,CAAC;EACJ,CAAC,CAAC;EACFX,WAAW,CAACN,WAAW,GAAGA,WAAW;EACrC,OAAOM,WAAW;AACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}