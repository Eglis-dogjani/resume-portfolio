{"ast":null,"code":"import _objectSpread from \"C:/Users/Admin/Documents/GitHub/resume-portfolio/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/Admin/Documents/GitHub/resume-portfolio/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"bsPrefix\", \"type\", \"size\", \"htmlSize\", \"id\", \"className\", \"isValid\", \"isInvalid\", \"plaintext\", \"readOnly\", \"as\"];\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      bsPrefix,\n      type,\n      size,\n      htmlSize,\n      id,\n      className,\n      isValid = false,\n      isInvalid = false,\n      plaintext,\n      readOnly,\n      // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n      as: Component = 'input'\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  let classes;\n  if (plaintext) {\n    classes = {\n      [\"\".concat(bsPrefix, \"-plaintext\")]: true\n    };\n  } else {\n    classes = {\n      [bsPrefix]: true,\n      [\"\".concat(bsPrefix, \"-\").concat(size)]: size\n    };\n  }\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, _objectSpread(_objectSpread({}, props), {}, {\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && \"is-valid\", isInvalid && \"is-invalid\", type === 'color' && \"\".concat(bsPrefix, \"-color\"))\n  }));\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","map":{"version":3,"names":["classNames","React","useContext","warning","Feedback","FormContext","useBootstrapPrefix","jsx","_jsx","FormControl","forwardRef","_ref","ref","bsPrefix","type","size","htmlSize","id","className","isValid","isInvalid","plaintext","readOnly","as","Component","props","_objectWithoutProperties","_excluded","controlId","classes","concat","process","env","NODE_ENV","_objectSpread","displayName","Object","assign"],"sources":["C:/Users/Admin/Documents/GitHub/resume-portfolio/node_modules/react-bootstrap/esm/FormControl.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  let classes;\n  if (plaintext) {\n    classes = {\n      [`${bsPrefix}-plaintext`]: true\n    };\n  } else {\n    classes = {\n      [bsPrefix]: true,\n      [`${bsPrefix}-${size}`]: size\n    };\n  }\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && `is-valid`, isInvalid && `is-invalid`, type === 'color' && `${bsPrefix}-color`)\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});"],"mappings":";;;AAAA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,QAAQ,OAAO;AAClC,OAAOC,OAAO,MAAM,SAAS;AAC7B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,kBAAkB,QAAQ,iBAAiB;AACpD,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,MAAMC,WAAW,GAAG,aAAaR,KAAK,CAACS,UAAU,CAAC,CAAAC,IAAA,EAc/CC,GAAG,KAAK;EAAA,IAdwC;MACjDC,QAAQ;MACRC,IAAI;MACJC,IAAI;MACJC,QAAQ;MACRC,EAAE;MACFC,SAAS;MACTC,OAAO,GAAG,KAAK;MACfC,SAAS,GAAG,KAAK;MACjBC,SAAS;MACTC,QAAQ;MACR;MACAC,EAAE,EAAEC,SAAS,GAAG;IAElB,CAAC,GAAAb,IAAA;IADIc,KAAK,GAAAC,wBAAA,CAAAf,IAAA,EAAAgB,SAAA;EAER,MAAM;IACJC;EACF,CAAC,GAAG1B,UAAU,CAACG,WAAW,CAAC;EAC3BQ,QAAQ,GAAGP,kBAAkB,CAACO,QAAQ,EAAE,cAAc,CAAC;EACvD,IAAIgB,OAAO;EACX,IAAIR,SAAS,EAAE;IACbQ,OAAO,GAAG;MACR,IAAAC,MAAA,CAAIjB,QAAQ,kBAAe;IAC7B,CAAC;EACH,CAAC,MAAM;IACLgB,OAAO,GAAG;MACR,CAAChB,QAAQ,GAAG,IAAI;MAChB,IAAAiB,MAAA,CAAIjB,QAAQ,OAAAiB,MAAA,CAAIf,IAAI,IAAKA;IAC3B,CAAC;EACH;EACAgB,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG9B,OAAO,CAACyB,SAAS,IAAI,IAAI,IAAI,CAACX,EAAE,EAAE,mEAAmE,CAAC,GAAG,KAAK,CAAC;EACvJ,OAAO,aAAaT,IAAI,CAACgB,SAAS,EAAAU,aAAA,CAAAA,aAAA,KAC7BT,KAAK;IACRX,IAAI,EAAEA,IAAI;IACVC,IAAI,EAAEC,QAAQ;IACdJ,GAAG,EAAEA,GAAG;IACRU,QAAQ,EAAEA,QAAQ;IAClBL,EAAE,EAAEA,EAAE,IAAIW,SAAS;IACnBV,SAAS,EAAElB,UAAU,CAACkB,SAAS,EAAEW,OAAO,EAAEV,OAAO,cAAc,EAAEC,SAAS,gBAAgB,EAAEN,IAAI,KAAK,OAAO,OAAAgB,MAAA,CAAOjB,QAAQ,WAAQ;EAAC,EACrI,CAAC;AACJ,CAAC,CAAC;AACFJ,WAAW,CAAC0B,WAAW,GAAG,aAAa;AACvC,eAAeC,MAAM,CAACC,MAAM,CAAC5B,WAAW,EAAE;EACxCL;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}